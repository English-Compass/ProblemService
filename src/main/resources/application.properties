spring.application.name=ProblemService

# MySQL Database Configuration (for development)
# 중요: characterEncoding=UTF-8&useUnicode=true 설정으로 한글 인코딩 문제 해결
# 이 설정이 없으면 설명란의 한글이 깨져서 표시됨 (예: "오락" → "ì˜¤ë½")
spring.datasource.url=jdbc:mysql://localhost:3306/problem_service_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&characterEncoding=UTF-8&useUnicode=true&connectionCollation=utf8mb4_unicode_ci&characterSetResults=utf8mb4
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=root

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
# Hibernate의 한글 문자 처리를 위한 설정
spring.jpa.properties.hibernate.connection.characterEncoding=UTF-8
spring.jpa.properties.hibernate.connection.useUnicode=true

# Server Configuration
server.port=8081
# HTTP 응답에서 한글 문자가 깨지지 않도록 UTF-8 인코딩 강제 적용
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

# Logging Configuration
logging.level.com.problemservice=INFO
logging.level.com.problemservice.ProblemService.config.LoggingFilter=INFO
logging.level.com.problemservice.ProblemService.config.LoggingInterceptor=INFO

# API Logging Pattern
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# OpenAI Configuration
openai.api.key=${OPENAI_API_KEY:}
openai.api.timeout=${OPENAI_API_TIMEOUT:60}

# Kafka Configuration
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.group-id=problem-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Kafka Topics
app.kafka.topic.session-completed=learning-session-completed
app.kafka.topic.session-started=learning-session-started
app.kafka.topic.question-answered=learning-question-answered
app.kafka.topic.user-patterns=learning-user-patterns
app.kafka.topic.system-health=learning-system-health
app.kafka.topic.error-events=learning-error-events
